Ext.data.JsonP.Ext_Base({"parentMixins":[],"inheritdoc":null,"extends":null,"alternateClassNames":[],"requires":[],"tagname":"class","singleton":false,"inheritable":false,"statics":{"cfg":[],"property":[],"method":[{"owner":"Ext.Base","tagname":"method","meta":{"static":true},"name":"addMembers","id":"static-method-addMembers"},{"owner":"Ext.Base","tagname":"method","meta":{"static":true},"name":"addStatics","id":"static-method-addStatics"},{"owner":"Ext.Base","tagname":"method","meta":{"static":true,"private":true},"name":"borrow","id":"static-method-borrow"},{"owner":"Ext.Base","tagname":"method","meta":{"static":true},"name":"create","id":"static-method-create"},{"owner":"Ext.Base","tagname":"method","meta":{"static":true},"name":"createAlias","id":"static-method-createAlias"},{"owner":"Ext.Base","tagname":"method","meta":{"static":true},"name":"getName","id":"static-method-getName"},{"owner":"Ext.Base","tagname":"method","meta":{"static":true,"deprecated":{"text":"Use {@link Ext#define Ext.define} instead","version":"4.1.0"},"markdown":true},"name":"override","id":"static-method-override"}],"event":[],"css_var":[],"css_mixin":[]},"mixins":[],"code_type":"nop","component":false,"uses":[],"members":{"cfg":[],"method":[{"owner":"Ext.Base","tagname":"method","meta":{"private":true},"name":"addConfig","id":"method-addConfig"},{"owner":"Ext.Base","tagname":"method","meta":{"private":true},"name":"addInheritableStatics","id":"method-addInheritableStatics"},{"owner":"Ext.Base","tagname":"method","meta":{"private":true},"name":"addMember","id":"method-addMember"},{"owner":"Ext.Base","tagname":"method","meta":{"private":true},"name":"addXtype","id":"method-addXtype"},{"owner":"Ext.Base","tagname":"method","meta":{"deprecated":{"text":"as of 4.1. Use {@link #callParent} instead."},"protected":true},"name":"callOverridden","id":"method-callOverridden"},{"owner":"Ext.Base","tagname":"method","meta":{"protected":true},"name":"callParent","id":"method-callParent"},{"owner":"Ext.Base","tagname":"method","meta":{"private":true},"name":"extend","id":"method-extend"},{"owner":"Ext.Base","tagname":"method","meta":{"private":true},"name":"getConfig","id":"method-getConfig"},{"owner":"Ext.Base","tagname":"method","meta":{},"name":"getInitialConfig","id":"method-getInitialConfig"},{"owner":"Ext.Base","tagname":"method","meta":{"private":true},"name":"hasConfig","id":"method-hasConfig"},{"owner":"Ext.Base","tagname":"method","meta":{"private":true},"name":"implement","id":"method-implement"},{"owner":"Ext.Base","tagname":"method","meta":{"protected":true},"name":"initConfig","id":"method-initConfig"},{"owner":"Ext.Base","tagname":"method","meta":{"private":true},"name":"mixin","id":"method-mixin"},{"owner":"Ext.Base","tagname":"method","meta":{"private":true},"name":"onConfigUpdate","id":"method-onConfigUpdate"},{"owner":"Ext.Base","tagname":"method","meta":{"private":true},"name":"onExtended","id":"method-onExtended"},{"owner":"Ext.Base","tagname":"method","meta":{"private":true},"name":"setConfig","id":"method-setConfig"},{"owner":"Ext.Base","tagname":"method","meta":{"protected":true},"name":"statics","id":"method-statics"},{"owner":"Ext.Base","tagname":"method","meta":{"private":true},"name":"triggerExtended","id":"method-triggerExtended"}],"property":[{"owner":"Ext.Base","tagname":"property","meta":{"private":true},"name":"$onExtended","id":"property-S-onExtended"},{"owner":"Ext.Base","tagname":"property","meta":{"protected":true},"name":"self","id":"property-self"}],"css_var":[],"event":[],"css_mixin":[]},"html":"<div><pre class=\"hierarchy\"><h4>Subclasses</h4><div class='dependency'><a href='#!/api/Ext.AbstractComponent' rel='Ext.AbstractComponent' class='docClass'>Ext.AbstractComponent</a></div><div class='dependency'><a href='#!/api/Ext.AbstractManager' rel='Ext.AbstractManager' class='docClass'>Ext.AbstractManager</a></div><div class='dependency'><a href='#!/api/Ext.AbstractPlugin' rel='Ext.AbstractPlugin' class='docClass'>Ext.AbstractPlugin</a></div><div class='dependency'><a href='#!/api/Ext.Action' rel='Ext.Action' class='docClass'>Ext.Action</a></div><div class='dependency'><a href='#!/api/Ext.ComponentQuery' rel='Ext.ComponentQuery' class='docClass'>Ext.ComponentQuery</a></div><div class='dependency'><a href='#!/api/Ext.ElementLoader' rel='Ext.ElementLoader' class='docClass'>Ext.ElementLoader</a></div><div class='dependency'><a href='#!/api/Ext.EventObject' rel='Ext.EventObject' class='docClass'>Ext.EventObject</a></div><div class='dependency'><a href='#!/api/Ext.FocusManager' rel='Ext.FocusManager' class='docClass'>Ext.FocusManager</a></div><div class='dependency'><a href='#!/api/Ext.Shadow' rel='Ext.Shadow' class='docClass'>Ext.Shadow</a></div><div class='dependency'><a href='#!/api/Ext.ShadowPool' rel='Ext.ShadowPool' class='docClass'>Ext.ShadowPool</a></div><div class='dependency'><a href='#!/api/Ext.Template' rel='Ext.Template' class='docClass'>Ext.Template</a></div><div class='dependency'><a href='#!/api/Ext.XTemplateParser' rel='Ext.XTemplateParser' class='docClass'>Ext.XTemplateParser</a></div><div class='dependency'><a href='#!/api/Ext.ZIndexManager' rel='Ext.ZIndexManager' class='docClass'>Ext.ZIndexManager</a></div><div class='dependency'><a href='#!/api/Ext.app.Controller' rel='Ext.app.Controller' class='docClass'>Ext.app.Controller</a></div><div class='dependency'><a href='#!/api/Ext.app.EventBus' rel='Ext.app.EventBus' class='docClass'>Ext.app.EventBus</a></div><div class='dependency'><a href='#!/api/Ext.chart.Callout' rel='Ext.chart.Callout' class='docClass'>Ext.chart.Callout</a></div><div class='dependency'><a href='#!/api/Ext.chart.Highlight' rel='Ext.chart.Highlight' class='docClass'>Ext.chart.Highlight</a></div><div class='dependency'><a href='#!/api/Ext.chart.Label' rel='Ext.chart.Label' class='docClass'>Ext.chart.Label</a></div><div class='dependency'><a href='#!/api/Ext.chart.Legend' rel='Ext.chart.Legend' class='docClass'>Ext.chart.Legend</a></div><div class='dependency'><a href='#!/api/Ext.chart.Mask' rel='Ext.chart.Mask' class='docClass'>Ext.chart.Mask</a></div><div class='dependency'><a href='#!/api/Ext.chart.Navigation' rel='Ext.chart.Navigation' class='docClass'>Ext.chart.Navigation</a></div><div class='dependency'><a href='#!/api/Ext.chart.Shape' rel='Ext.chart.Shape' class='docClass'>Ext.chart.Shape</a></div><div class='dependency'><a href='#!/api/Ext.chart.Tip' rel='Ext.chart.Tip' class='docClass'>Ext.chart.Tip</a></div><div class='dependency'><a href='#!/api/Ext.chart.axis.Abstract' rel='Ext.chart.axis.Abstract' class='docClass'>Ext.chart.axis.Abstract</a></div><div class='dependency'><a href='#!/api/Ext.chart.series.Series' rel='Ext.chart.series.Series' class='docClass'>Ext.chart.series.Series</a></div><div class='dependency'><a href='#!/api/Ext.chart.theme.Base' rel='Ext.chart.theme.Base' class='docClass'>Ext.chart.theme.Base</a></div><div class='dependency'><a href='#!/api/Ext.chart.theme.Theme' rel='Ext.chart.theme.Theme' class='docClass'>Ext.chart.theme.Theme</a></div><div class='dependency'><a href='#!/api/Ext.container.DockingContainer' rel='Ext.container.DockingContainer' class='docClass'>Ext.container.DockingContainer</a></div><div class='dependency'><a href='#!/api/Ext.data.AbstractStore' rel='Ext.data.AbstractStore' class='docClass'>Ext.data.AbstractStore</a></div><div class='dependency'><a href='#!/api/Ext.data.Batch' rel='Ext.data.Batch' class='docClass'>Ext.data.Batch</a></div><div class='dependency'><a href='#!/api/Ext.data.Connection' rel='Ext.data.Connection' class='docClass'>Ext.data.Connection</a></div><div class='dependency'><a href='#!/api/Ext.data.Field' rel='Ext.data.Field' class='docClass'>Ext.data.Field</a></div><div class='dependency'><a href='#!/api/Ext.data.IdGenerator' rel='Ext.data.IdGenerator' class='docClass'>Ext.data.IdGenerator</a></div><div class='dependency'><a href='#!/api/Ext.data.JsonP' rel='Ext.data.JsonP' class='docClass'>Ext.data.JsonP</a></div><div class='dependency'><a href='#!/api/Ext.data.Model' rel='Ext.data.Model' class='docClass'>Ext.data.Model</a></div><div class='dependency'><a href='#!/api/Ext.data.NodeInterface' rel='Ext.data.NodeInterface' class='docClass'>Ext.data.NodeInterface</a></div><div class='dependency'><a href='#!/api/Ext.data.Operation' rel='Ext.data.Operation' class='docClass'>Ext.data.Operation</a></div><div class='dependency'><a href='#!/api/Ext.data.Request' rel='Ext.data.Request' class='docClass'>Ext.data.Request</a></div><div class='dependency'><a href='#!/api/Ext.data.ResultSet' rel='Ext.data.ResultSet' class='docClass'>Ext.data.ResultSet</a></div><div class='dependency'><a href='#!/api/Ext.data.SortTypes' rel='Ext.data.SortTypes' class='docClass'>Ext.data.SortTypes</a></div><div class='dependency'><a href='#!/api/Ext.data.Tree' rel='Ext.data.Tree' class='docClass'>Ext.data.Tree</a></div><div class='dependency'><a href='#!/api/Ext.data.Types' rel='Ext.data.Types' class='docClass'>Ext.data.Types</a></div><div class='dependency'><a href='#!/api/Ext.data.association.Association' rel='Ext.data.association.Association' class='docClass'>Ext.data.association.Association</a></div><div class='dependency'><a href='#!/api/Ext.data.proxy.Proxy' rel='Ext.data.proxy.Proxy' class='docClass'>Ext.data.proxy.Proxy</a></div><div class='dependency'><a href='#!/api/Ext.data.reader.Reader' rel='Ext.data.reader.Reader' class='docClass'>Ext.data.reader.Reader</a></div><div class='dependency'><a href='#!/api/Ext.data.validations' rel='Ext.data.validations' class='docClass'>Ext.data.validations</a></div><div class='dependency'><a href='#!/api/Ext.data.writer.Writer' rel='Ext.data.writer.Writer' class='docClass'>Ext.data.writer.Writer</a></div><div class='dependency'><a href='#!/api/Ext.dd.DragDrop' rel='Ext.dd.DragDrop' class='docClass'>Ext.dd.DragDrop</a></div><div class='dependency'><a href='#!/api/Ext.dd.DragDropManager' rel='Ext.dd.DragDropManager' class='docClass'>Ext.dd.DragDropManager</a></div><div class='dependency'><a href='#!/api/Ext.dd.DragTracker' rel='Ext.dd.DragTracker' class='docClass'>Ext.dd.DragTracker</a></div><div class='dependency'><a href='#!/api/Ext.dd.Registry' rel='Ext.dd.Registry' class='docClass'>Ext.dd.Registry</a></div><div class='dependency'><a href='#!/api/Ext.dd.ScrollManager' rel='Ext.dd.ScrollManager' class='docClass'>Ext.dd.ScrollManager</a></div><div class='dependency'><a href='#!/api/Ext.diag.layout.Context' rel='Ext.diag.layout.Context' class='docClass'>Ext.diag.layout.Context</a></div><div class='dependency'><a href='#!/api/Ext.diag.layout.ContextItem' rel='Ext.diag.layout.ContextItem' class='docClass'>Ext.diag.layout.ContextItem</a></div><div class='dependency'><a href='#!/api/Ext.direct.Event' rel='Ext.direct.Event' class='docClass'>Ext.direct.Event</a></div><div class='dependency'><a href='#!/api/Ext.direct.Manager' rel='Ext.direct.Manager' class='docClass'>Ext.direct.Manager</a></div><div class='dependency'><a href='#!/api/Ext.direct.Provider' rel='Ext.direct.Provider' class='docClass'>Ext.direct.Provider</a></div><div class='dependency'><a href='#!/api/Ext.direct.RemotingMethod' rel='Ext.direct.RemotingMethod' class='docClass'>Ext.direct.RemotingMethod</a></div><div class='dependency'><a href='#!/api/Ext.direct.Transaction' rel='Ext.direct.Transaction' class='docClass'>Ext.direct.Transaction</a></div><div class='dependency'><a href='#!/api/Ext.dom.AbstractElement' rel='Ext.dom.AbstractElement' class='docClass'>Ext.dom.AbstractElement</a></div><div class='dependency'><a href='#!/api/Ext.dom.AbstractHelper' rel='Ext.dom.AbstractHelper' class='docClass'>Ext.dom.AbstractHelper</a></div><div class='dependency'><a href='#!/api/Ext.dom.AbstractQuery' rel='Ext.dom.AbstractQuery' class='docClass'>Ext.dom.AbstractQuery</a></div><div class='dependency'><a href='#!/api/Ext.dom.CompositeElementLite' rel='Ext.dom.CompositeElementLite' class='docClass'>Ext.dom.CompositeElementLite</a></div><div class='dependency'><a href='#!/api/Ext.draw.Color' rel='Ext.draw.Color' class='docClass'>Ext.draw.Color</a></div><div class='dependency'><a href='#!/api/Ext.draw.Draw' rel='Ext.draw.Draw' class='docClass'>Ext.draw.Draw</a></div><div class='dependency'><a href='#!/api/Ext.draw.Matrix' rel='Ext.draw.Matrix' class='docClass'>Ext.draw.Matrix</a></div><div class='dependency'><a href='#!/api/Ext.draw.Sprite' rel='Ext.draw.Sprite' class='docClass'>Ext.draw.Sprite</a></div><div class='dependency'><a href='#!/api/Ext.draw.Surface' rel='Ext.draw.Surface' class='docClass'>Ext.draw.Surface</a></div><div class='dependency'><a href='#!/api/Ext.draw.engine.ImageExporter' rel='Ext.draw.engine.ImageExporter' class='docClass'>Ext.draw.engine.ImageExporter</a></div><div class='dependency'><a href='#!/api/Ext.draw.engine.SvgExporter' rel='Ext.draw.engine.SvgExporter' class='docClass'>Ext.draw.engine.SvgExporter</a></div><div class='dependency'><a href='#!/api/Ext.env.Browser' rel='Ext.env.Browser' class='docClass'>Ext.env.Browser</a></div><div class='dependency'><a href='#!/api/Ext.env.FeatureDetector' rel='Ext.env.FeatureDetector' class='docClass'>Ext.env.FeatureDetector</a></div><div class='dependency'><a href='#!/api/Ext.env.OS' rel='Ext.env.OS' class='docClass'>Ext.env.OS</a></div><div class='dependency'><a href='#!/api/Ext.form.FieldAncestor' rel='Ext.form.FieldAncestor' class='docClass'>Ext.form.FieldAncestor</a></div><div class='dependency'><a href='#!/api/Ext.form.Labelable' rel='Ext.form.Labelable' class='docClass'>Ext.form.Labelable</a></div><div class='dependency'><a href='#!/api/Ext.form.action.Action' rel='Ext.form.action.Action' class='docClass'>Ext.form.action.Action</a></div><div class='dependency'><a href='#!/api/Ext.form.field.Field' rel='Ext.form.field.Field' class='docClass'>Ext.form.field.Field</a></div><div class='dependency'><a href='#!/api/Ext.form.field.VTypes' rel='Ext.form.field.VTypes' class='docClass'>Ext.form.field.VTypes</a></div><div class='dependency'><a href='#!/api/Ext.fx.Anim' rel='Ext.fx.Anim' class='docClass'>Ext.fx.Anim</a></div><div class='dependency'><a href='#!/api/Ext.fx.Animator' rel='Ext.fx.Animator' class='docClass'>Ext.fx.Animator</a></div><div class='dependency'><a href='#!/api/Ext.fx.CubicBezier' rel='Ext.fx.CubicBezier' class='docClass'>Ext.fx.CubicBezier</a></div><div class='dependency'><a href='#!/api/Ext.fx.Manager' rel='Ext.fx.Manager' class='docClass'>Ext.fx.Manager</a></div><div class='dependency'><a href='#!/api/Ext.fx.PropertyHandler' rel='Ext.fx.PropertyHandler' class='docClass'>Ext.fx.PropertyHandler</a></div><div class='dependency'><a href='#!/api/Ext.fx.Queue' rel='Ext.fx.Queue' class='docClass'>Ext.fx.Queue</a></div><div class='dependency'><a href='#!/api/Ext.fx.target.Target' rel='Ext.fx.target.Target' class='docClass'>Ext.fx.target.Target</a></div><div class='dependency'><a href='#!/api/Ext.grid.Lockable' rel='Ext.grid.Lockable' class='docClass'>Ext.grid.Lockable</a></div><div class='dependency'><a href='#!/api/Ext.grid.LockingView' rel='Ext.grid.LockingView' class='docClass'>Ext.grid.LockingView</a></div><div class='dependency'><a href='#!/api/Ext.grid.PagingScroller' rel='Ext.grid.PagingScroller' class='docClass'>Ext.grid.PagingScroller</a></div><div class='dependency'><a href='#!/api/Ext.grid.plugin.Editing' rel='Ext.grid.plugin.Editing' class='docClass'>Ext.grid.plugin.Editing</a></div><div class='dependency'><a href='#!/api/Ext.layout.ClassList' rel='Ext.layout.ClassList' class='docClass'>Ext.layout.ClassList</a></div><div class='dependency'><a href='#!/api/Ext.layout.Context' rel='Ext.layout.Context' class='docClass'>Ext.layout.Context</a></div><div class='dependency'><a href='#!/api/Ext.layout.ContextItem' rel='Ext.layout.ContextItem' class='docClass'>Ext.layout.ContextItem</a></div><div class='dependency'><a href='#!/api/Ext.layout.Layout' rel='Ext.layout.Layout' class='docClass'>Ext.layout.Layout</a></div><div class='dependency'><a href='#!/api/Ext.layout.container.boxOverflow.None' rel='Ext.layout.container.boxOverflow.None' class='docClass'>Ext.layout.container.boxOverflow.None</a></div><div class='dependency'><a href='#!/api/Ext.menu.Manager' rel='Ext.menu.Manager' class='docClass'>Ext.menu.Manager</a></div><div class='dependency'><a href='#!/api/Ext.panel.Proxy' rel='Ext.panel.Proxy' class='docClass'>Ext.panel.Proxy</a></div><div class='dependency'><a href='#!/api/Ext.perf.Accumulator' rel='Ext.perf.Accumulator' class='docClass'>Ext.perf.Accumulator</a></div><div class='dependency'><a href='#!/api/Ext.perf.Monitor' rel='Ext.perf.Monitor' class='docClass'>Ext.perf.Monitor</a></div><div class='dependency'><a href='#!/api/Ext.resizer.Resizer' rel='Ext.resizer.Resizer' class='docClass'>Ext.resizer.Resizer</a></div><div class='dependency'><a href='#!/api/Ext.slider.Thumb' rel='Ext.slider.Thumb' class='docClass'>Ext.slider.Thumb</a></div><div class='dependency'><a href='#!/api/Ext.state.Manager' rel='Ext.state.Manager' class='docClass'>Ext.state.Manager</a></div><div class='dependency'><a href='#!/api/Ext.state.Provider' rel='Ext.state.Provider' class='docClass'>Ext.state.Provider</a></div><div class='dependency'><a href='#!/api/Ext.state.Stateful' rel='Ext.state.Stateful' class='docClass'>Ext.state.Stateful</a></div><div class='dependency'><a href='#!/api/Ext.tip.QuickTipManager' rel='Ext.tip.QuickTipManager' class='docClass'>Ext.tip.QuickTipManager</a></div><div class='dependency'><a href='#!/api/Ext.util.AbstractMixedCollection' rel='Ext.util.AbstractMixedCollection' class='docClass'>Ext.util.AbstractMixedCollection</a></div><div class='dependency'><a href='#!/api/Ext.util.Animate' rel='Ext.util.Animate' class='docClass'>Ext.util.Animate</a></div><div class='dependency'><a href='#!/api/Ext.util.Bindable' rel='Ext.util.Bindable' class='docClass'>Ext.util.Bindable</a></div><div class='dependency'><a href='#!/api/Ext.util.CSS' rel='Ext.util.CSS' class='docClass'>Ext.util.CSS</a></div><div class='dependency'><a href='#!/api/Ext.util.Cookies' rel='Ext.util.Cookies' class='docClass'>Ext.util.Cookies</a></div><div class='dependency'><a href='#!/api/Ext.util.ElementContainer' rel='Ext.util.ElementContainer' class='docClass'>Ext.util.ElementContainer</a></div><div class='dependency'><a href='#!/api/Ext.util.Filter' rel='Ext.util.Filter' class='docClass'>Ext.util.Filter</a></div><div class='dependency'><a href='#!/api/Ext.util.Floating' rel='Ext.util.Floating' class='docClass'>Ext.util.Floating</a></div><div class='dependency'><a href='#!/api/Ext.util.HashMap' rel='Ext.util.HashMap' class='docClass'>Ext.util.HashMap</a></div><div class='dependency'><a href='#!/api/Ext.util.History' rel='Ext.util.History' class='docClass'>Ext.util.History</a></div><div class='dependency'><a href='#!/api/Ext.util.Inflector' rel='Ext.util.Inflector' class='docClass'>Ext.util.Inflector</a></div><div class='dependency'><a href='#!/api/Ext.util.KeyMap' rel='Ext.util.KeyMap' class='docClass'>Ext.util.KeyMap</a></div><div class='dependency'><a href='#!/api/Ext.util.KeyNav' rel='Ext.util.KeyNav' class='docClass'>Ext.util.KeyNav</a></div><div class='dependency'><a href='#!/api/Ext.util.Memento' rel='Ext.util.Memento' class='docClass'>Ext.util.Memento</a></div><div class='dependency'><a href='#!/api/Ext.util.Observable' rel='Ext.util.Observable' class='docClass'>Ext.util.Observable</a></div><div class='dependency'><a href='#!/api/Ext.util.Offset' rel='Ext.util.Offset' class='docClass'>Ext.util.Offset</a></div><div class='dependency'><a href='#!/api/Ext.util.ProtoElement' rel='Ext.util.ProtoElement' class='docClass'>Ext.util.ProtoElement</a></div><div class='dependency'><a href='#!/api/Ext.util.Queue' rel='Ext.util.Queue' class='docClass'>Ext.util.Queue</a></div><div class='dependency'><a href='#!/api/Ext.util.Region' rel='Ext.util.Region' class='docClass'>Ext.util.Region</a></div><div class='dependency'><a href='#!/api/Ext.util.Renderable' rel='Ext.util.Renderable' class='docClass'>Ext.util.Renderable</a></div><div class='dependency'><a href='#!/api/Ext.util.Sortable' rel='Ext.util.Sortable' class='docClass'>Ext.util.Sortable</a></div><div class='dependency'><a href='#!/api/Ext.util.Sorter' rel='Ext.util.Sorter' class='docClass'>Ext.util.Sorter</a></div><div class='dependency'><a href='#!/api/Ext.util.TaskRunner' rel='Ext.util.TaskRunner' class='docClass'>Ext.util.TaskRunner</a></div><div class='dependency'><a href='#!/api/Ext.util.TextMetrics' rel='Ext.util.TextMetrics' class='docClass'>Ext.util.TextMetrics</a></div><div class='dependency'><a href='#!/api/Ext.view.TableChunker' rel='Ext.view.TableChunker' class='docClass'>Ext.view.TableChunker</a></div><div class='dependency'><a href='#!/api/GeoExt' rel='GeoExt' class='docClass'>GeoExt</a></div><h4>Files</h4><div class='dependency'><a href='source/Base2.html#Ext-Base' target='_blank'>Base.js</a></div></pre><div class='doc-contents'><p>The root of all classes created with <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>.</p>\n\n<p><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a> is the building block of all Ext classes. All classes in Ext inherit from <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>.\nAll prototype and static members of this class are inherited by all other classes.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-S-onExtended' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-property-S-onExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-S-onExtended' class='name expandable'>$onExtended</a><span> : Array</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-self' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-property-self' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-property-self' class='name expandable'>self</a><span> : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Get the reference to the current class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n</div></div></div></div></div><div class='members-section'><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Instance Methods</h3><div id='method-addConfig' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-method-addConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-addConfig' class='name expandable'>addConfig</a>( <span class='pre'>Object config</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-addInheritableStatics' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-method-addInheritableStatics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-addInheritableStatics' class='name expandable'>addInheritableStatics</a>( <span class='pre'>Object members</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-addMember' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-method-addMember' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-addMember' class='name expandable'>addMember</a>( <span class='pre'>Object name, Object member</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>member</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-addXtype' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-method-addXtype' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-addXtype' class='name expandable'>addXtype</a>( <span class='pre'>Object xtype</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>xtype</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-callOverridden' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-method-callOverridden' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callOverridden' class='name expandable'>callOverridden</a>( <span class='pre'>Array/Arguments args</span> ) : Object<strong class='deprecated signature'>deprecated</strong><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...</div><div class='long'><p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> </p>\n        <p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Array/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Returns the result of calling the overridden method</p>\n</div></li></ul></div></div></div><div id='method-callParent' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-method-callParent' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-callParent' class='name expandable'>callParent</a>( <span class='pre'>Array/Arguments args</span> ) : Object<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Call the \"parent\" method of the current method. ...</div><div class='long'><p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>args</span> : Array/Arguments<div class='sub-desc'><p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>Returns the result of calling the parent method</p>\n</div></li></ul></div></div></div><div id='method-extend' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-method-extend' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-extend' class='name expandable'>extend</a>( <span class='pre'>Object config</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-method-getConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getConfig' class='name expandable'>getConfig</a>( <span class='pre'>Object name</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-getInitialConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-method-getInitialConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-getInitialConfig' class='name expandable'>getInitialConfig</a>( <span class='pre'>Object name</span> )</div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-hasConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-method-hasConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-hasConfig' class='name expandable'>hasConfig</a>( <span class='pre'>Object config</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-implement' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-method-implement' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-implement' class='name expandable'>implement</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-initConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-method-initConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-initConfig' class='name expandable'>initConfig</a>( <span class='pre'>Object config</span> ) : Object<strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Initialize configuration for this class. ...</div><div class='long'><p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>mixins The mixin prototypes as key - value pairs</p>\n</div></li></ul></div></div></div><div id='method-mixin' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-method-mixin' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-mixin' class='name expandable'>mixin</a>( <span class='pre'>Object name, Object mixinClass</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Used internally by the mixins pre-processor ...</div><div class='long'><p>Used internally by the mixins pre-processor</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>mixinClass</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-onConfigUpdate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-method-onConfigUpdate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-onConfigUpdate' class='name expandable'>onConfigUpdate</a>( <span class='pre'>Object names, Object callback, Object scope</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>names</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>callback</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-onExtended' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-method-onExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-onExtended' class='name expandable'>onExtended</a>( <span class='pre'>Object fn, Object scope</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-setConfig' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-method-setConfig' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-setConfig' class='name expandable'>setConfig</a>( <span class='pre'>Object config, Object applyIfNotSet</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>config</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>applyIfNotSet</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-statics' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-method-statics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-statics' class='name expandable'>statics</a>( <span class='pre'></span> ) : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a><strong class='protected signature'>protected</strong></div><div class='description'><div class='short'>Get the reference to the class from which this object was instantiated. ...</div><div class='long'><p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-triggerExtended' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-method-triggerExtended' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-method-triggerExtended' class='name expandable'>triggerExtended</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div></div><div class='subsection'><div class='definedBy'>Defined By</div><h4 class='members-subtitle'>Static Methods</h3><div id='static-method-addMembers' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-static-method-addMembers' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addMembers' class='name expandable'>addMembers</a>( <span class='pre'>Object members</span> )<strong class='static signature'>static</strong></div><div class='description'><div class='short'>Add methods / properties to the prototype of this class. ...</div><div class='long'><p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.implement({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='static-method-addStatics' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-static-method-addStatics' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-addStatics' class='name expandable'>addStatics</a>( <span class='pre'>Object members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='static signature'>static</strong></div><div class='description'><div class='short'>Add / override static properties of this class. ...</div><div class='long'><p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : Object<div class='sub-desc'>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='static-method-borrow' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-static-method-borrow' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-borrow' class='name expandable'>borrow</a>( <span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a> fromClass, Array/String members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='private signature'>private</strong><strong class='static signature'>static</strong></div><div class='description'><div class='short'>Borrow another class' members to the prototype of this class. ...</div><div class='long'><p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fromClass</span> : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><div class='sub-desc'><p>The class to borrow members from</p>\n</div></li><li><span class='pre'>members</span> : Array/String<div class='sub-desc'><p>The names of the members to borrow</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this</p>\n</div></li></ul></div></div></div><div id='static-method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-static-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-create' class='name expandable'>create</a>( <span class='pre'></span> ) : Object<strong class='static signature'>static</strong></div><div class='description'><div class='short'>Create a new instance of this Class. ...</div><div class='long'><p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p>the created instance.</p>\n</div></li></ul></div></div></div><div id='static-method-createAlias' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-static-method-createAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-createAlias' class='name expandable'>createAlias</a>( <span class='pre'>String/Object alias, String/Object origin</span> )<strong class='static signature'>static</strong></div><div class='description'><div class='short'>Create aliases for existing prototype methods. ...</div><div class='long'><p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alias</span> : String/Object<div class='sub-desc'><p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n</div></li><li><span class='pre'>origin</span> : String/Object<div class='sub-desc'><p>The original method name</p>\n</div></li></ul></div></div></div><div id='static-method-getName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-static-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-getName' class='name expandable'>getName</a>( <span class='pre'></span> ) : String<strong class='static signature'>static</strong></div><div class='description'><div class='short'>Get the current class' name in string format. ...</div><div class='long'><p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n<h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>className</p>\n</div></li></ul></div></div></div><div id='static-method-override' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.Base'>Ext.Base</span><br/><a href='source/Base2.html#Ext-Base-static-method-override' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.Base-static-method-override' class='name expandable'>override</a>( <span class='pre'>Object members</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a><strong class='deprecated signature'>deprecated</strong><strong class='static signature'>static</strong></div><div class='description'><div class='short'>Override members of this class. ...</div><div class='long'><p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n        <div class='signature-box deprecated'>\n        <p>This method has been <strong>deprecated</strong> since 4.1.0</p>\n        <p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n\n        </div>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>members</span> : Object<div class='sub-desc'><p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'><p>this class</p>\n</div></li></ul></div></div></div></div></div></div></div>","subclasses":["GeoExt","Ext.AbstractComponent","Ext.AbstractManager","Ext.AbstractPlugin","Ext.Action","Ext.app.Controller","Ext.app.EventBus","Ext.chart.axis.Abstract","Ext.chart.Callout","Ext.chart.Highlight","Ext.chart.Label","Ext.chart.Legend","Ext.chart.Mask","Ext.chart.Navigation","Ext.chart.series.Series","Ext.chart.Shape","Ext.chart.theme.Base","Ext.chart.theme.Theme","Ext.chart.Tip","Ext.ComponentQuery","Ext.container.DockingContainer","Ext.dom.AbstractElement","Ext.dom.AbstractHelper","Ext.dom.AbstractQuery","Ext.dom.CompositeElementLite","Ext.env.Browser","Ext.env.FeatureDetector","Ext.env.OS","Ext.EventObject","Ext.perf.Accumulator","Ext.perf.Monitor","Ext.util.TaskRunner","Ext.data.AbstractStore","Ext.data.association.Association","Ext.data.Batch","Ext.data.Connection","Ext.data.Field","Ext.data.IdGenerator","Ext.data.JsonP","Ext.data.Model","Ext.data.NodeInterface","Ext.data.Operation","Ext.data.proxy.Proxy","Ext.data.reader.Reader","Ext.data.Request","Ext.data.ResultSet","Ext.data.SortTypes","Ext.data.Tree","Ext.data.Types","Ext.data.validations","Ext.data.writer.Writer","Ext.dd.DragDrop","Ext.dd.DragDropManager","Ext.dd.DragTracker","Ext.dd.Registry","Ext.dd.ScrollManager","Ext.diag.layout.Context","Ext.diag.layout.ContextItem","Ext.direct.Event","Ext.direct.Manager","Ext.direct.Provider","Ext.direct.RemotingMethod","Ext.direct.Transaction","Ext.draw.Color","Ext.draw.Draw","Ext.draw.engine.ImageExporter","Ext.draw.engine.SvgExporter","Ext.draw.Matrix","Ext.draw.Sprite","Ext.draw.Surface","Ext.ElementLoader","Ext.FocusManager","Ext.form.action.Action","Ext.form.field.Field","Ext.form.field.VTypes","Ext.form.FieldAncestor","Ext.form.Labelable","Ext.fx.Anim","Ext.fx.Animator","Ext.fx.CubicBezier","Ext.fx.Manager","Ext.fx.PropertyHandler","Ext.fx.Queue","Ext.fx.target.Target","Ext.grid.Lockable","Ext.grid.LockingView","Ext.grid.PagingScroller","Ext.grid.plugin.Editing","Ext.layout.ClassList","Ext.layout.container.boxOverflow.None","Ext.layout.Context","Ext.layout.ContextItem","Ext.layout.Layout","Ext.menu.Manager","Ext.panel.Proxy","Ext.resizer.Resizer","Ext.Shadow","Ext.ShadowPool","Ext.slider.Thumb","Ext.state.Manager","Ext.state.Provider","Ext.state.Stateful","Ext.Template","Ext.tip.QuickTipManager","Ext.util.AbstractMixedCollection","Ext.util.Animate","Ext.util.Bindable","Ext.util.Cookies","Ext.util.CSS","Ext.util.ElementContainer","Ext.util.Filter","Ext.util.Floating","Ext.util.HashMap","Ext.util.History","Ext.util.Inflector","Ext.util.KeyMap","Ext.util.KeyNav","Ext.util.Memento","Ext.util.Observable","Ext.util.Offset","Ext.util.ProtoElement","Ext.util.Queue","Ext.util.Region","Ext.util.Renderable","Ext.util.Sortable","Ext.util.Sorter","Ext.util.TextMetrics","Ext.view.TableChunker","Ext.XTemplateParser","Ext.ZIndexManager"],"meta":{"docauthor":["Jacky Nguyen <jacky@sencha.com>"],"author":["Jacky Nguyen <jacky@sencha.com>"]},"html_meta":{"docauthor":null,"author":null},"name":"Ext.Base","files":[{"href":"Base2.html#Ext-Base","filename":"Base.js"}],"mixedInto":[],"aliases":{},"id":"class-Ext.Base","superclasses":[]});